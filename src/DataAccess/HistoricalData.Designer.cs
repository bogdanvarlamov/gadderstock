//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("HistoricalData", "FK_StockPrice", "Stock", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(_5DSolutions.Stocks.DataAccess.Stock), "Price", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_5DSolutions.Stocks.DataAccess.Price), true)]
[assembly: EdmRelationshipAttribute("HistoricalData", "PortfolioStock", "Portfolio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_5DSolutions.Stocks.DataAccess.Portfolio), "Stock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(_5DSolutions.Stocks.DataAccess.Stock))]

#endregion

namespace _5DSolutions.Stocks.DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class HistoricalDataContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new HistoricalDataContainer object using the connection string found in the 'HistoricalDataContainer' section of the application configuration file.
        /// </summary>
        public HistoricalDataContainer() : base("name=HistoricalDataContainer", "HistoricalDataContainer")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HistoricalDataContainer object.
        /// </summary>
        public HistoricalDataContainer(string connectionString) : base(connectionString, "HistoricalDataContainer")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HistoricalDataContainer object.
        /// </summary>
        public HistoricalDataContainer(EntityConnection connection) : base(connection, "HistoricalDataContainer")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Portfolio> Portfolios
        {
            get
            {
                if ((_Portfolios == null))
                {
                    _Portfolios = base.CreateObjectSet<Portfolio>("Portfolios");
                }
                return _Portfolios;
            }
        }
        private ObjectSet<Portfolio> _Portfolios;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Price> Prices
        {
            get
            {
                if ((_Prices == null))
                {
                    _Prices = base.CreateObjectSet<Price>("Prices");
                }
                return _Prices;
            }
        }
        private ObjectSet<Price> _Prices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Stock> Stocks
        {
            get
            {
                if ((_Stocks == null))
                {
                    _Stocks = base.CreateObjectSet<Stock>("Stocks");
                }
                return _Stocks;
            }
        }
        private ObjectSet<Stock> _Stocks;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Portfolios EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPortfolios(Portfolio portfolio)
        {
            base.AddObject("Portfolios", portfolio);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Prices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrices(Price price)
        {
            base.AddObject("Prices", price);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Stocks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStocks(Stock stock)
        {
            base.AddObject("Stocks", stock);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HistoricalData", Name="Portfolio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Portfolio : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Portfolio object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="creationTimeStamp">Initial value of the CreationTimeStamp property.</param>
        public static Portfolio CreatePortfolio(global::System.Guid id, global::System.DateTime creationTimeStamp)
        {
            Portfolio portfolio = new Portfolio();
            portfolio.Id = id;
            portfolio.CreationTimeStamp = creationTimeStamp;
            return portfolio;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationTimeStamp
        {
            get
            {
                return _CreationTimeStamp;
            }
            set
            {
                OnCreationTimeStampChanging(value);
                ReportPropertyChanging("CreationTimeStamp");
                _CreationTimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationTimeStamp");
                OnCreationTimeStampChanged();
            }
        }
        private global::System.DateTime _CreationTimeStamp;
        partial void OnCreationTimeStampChanging(global::System.DateTime value);
        partial void OnCreationTimeStampChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HistoricalData", "PortfolioStock", "Stock")]
        public EntityCollection<Stock> Stocks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Stock>("HistoricalData.PortfolioStock", "Stock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Stock>("HistoricalData.PortfolioStock", "Stock", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HistoricalData", Name="Price")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Price : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Price object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="stock_Id">Initial value of the Stock_Id property.</param>
        public static Price CreatePrice(global::System.Guid id, global::System.Decimal value, global::System.DateTime timeStamp, global::System.Guid stock_Id)
        {
            Price price = new Price();
            price.Id = id;
            price.Value = value;
            price.TimeStamp = timeStamp;
            price.Stock_Id = stock_Id;
            return price;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                OnTimeStampChanging(value);
                ReportPropertyChanging("TimeStamp");
                _TimeStamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeStamp");
                OnTimeStampChanged();
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnTimeStampChanging(global::System.DateTime value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Stock_Id
        {
            get
            {
                return _Stock_Id;
            }
            set
            {
                OnStock_IdChanging(value);
                ReportPropertyChanging("Stock_Id");
                _Stock_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stock_Id");
                OnStock_IdChanged();
            }
        }
        private global::System.Guid _Stock_Id;
        partial void OnStock_IdChanging(global::System.Guid value);
        partial void OnStock_IdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HistoricalData", "FK_StockPrice", "Stock")]
        public Stock Stock
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock>("HistoricalData.FK_StockPrice", "Stock").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock>("HistoricalData.FK_StockPrice", "Stock").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Stock> StockReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stock>("HistoricalData.FK_StockPrice", "Stock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Stock>("HistoricalData.FK_StockPrice", "Stock", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HistoricalData", Name="Stock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Stock : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Stock object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="symbol">Initial value of the Symbol property.</param>
        public static Stock CreateStock(global::System.Guid id, global::System.String symbol)
        {
            Stock stock = new Stock();
            stock.Id = id;
            stock.Symbol = symbol;
            return stock;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HistoricalData", "FK_StockPrice", "Price")]
        public EntityCollection<Price> Prices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Price>("HistoricalData.FK_StockPrice", "Price");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Price>("HistoricalData.FK_StockPrice", "Price", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HistoricalData", "PortfolioStock", "Portfolio")]
        public EntityCollection<Portfolio> Portfolios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Portfolio>("HistoricalData.PortfolioStock", "Portfolio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Portfolio>("HistoricalData.PortfolioStock", "Portfolio", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
